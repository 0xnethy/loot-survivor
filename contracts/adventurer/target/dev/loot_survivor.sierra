type u128 = u128;
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128>;
type u16 = u16;
type loot_survivor::adventurer::Adventurer = Struct<ut@loot_survivor::adventurer::Adventurer, u16, u16>;
type felt252 = felt252;
type RangeCheck = RangeCheck;
type Tuple<core::integer::u256> = Struct<ut@Tuple, core::integer::u256>;
type Array<felt252> = Array<felt252>;
type core::PanicResult::<(core::integer::u256,)> = Enum<ut@core::PanicResult::<(core::integer::u256,)>, Tuple<core::integer::u256>, Array<felt252>>;
type Bitwise = Bitwise;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::felt252> = Enum<ut@core::option::Option::<core::felt252>, felt252, Unit>;
type Tuple<felt252> = Struct<ut@Tuple, felt252>;
type core::PanicResult::<(core::felt252,)> = Enum<ut@core::PanicResult::<(core::felt252,)>, Tuple<felt252>, Array<felt252>>;
type core::option::Option::<core::integer::u16> = Enum<ut@core::option::Option::<core::integer::u16>, u16, Unit>;
type Tuple<loot_survivor::adventurer::Adventurer> = Struct<ut@Tuple, loot_survivor::adventurer::Adventurer>;
type core::PanicResult::<(loot_survivor::adventurer::Adventurer,)> = Enum<ut@core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, Tuple<loot_survivor::adventurer::Adventurer>, Array<felt252>>;
type Tuple<Unit> = Struct<ut@Tuple, Unit>;
type core::PanicResult::<((),)> = Enum<ut@core::PanicResult::<((),)>, Tuple<Unit>, Array<felt252>>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type core::option::Option::<core::integer::u256> = Enum<ut@core::option::Option::<core::integer::u256>, core::integer::u256, Unit>;
type NonZero<core::integer::u256> = NonZero<core::integer::u256>;
type Tuple<NonZero<core::integer::u256>> = Struct<ut@Tuple, NonZero<core::integer::u256>>;
type core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)> = Enum<ut@core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, Tuple<NonZero<core::integer::u256>>, Array<felt252>>;
type Tuple<core::integer::u256, core::bool> = Struct<ut@Tuple, core::integer::u256, core::bool>;
type core::option::Option::<core::zeroable::NonZero::<core::integer::u256>> = Enum<ut@core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, NonZero<core::integer::u256>, Unit>;
type U128MulGuarantee = U128MulGuarantee;
type Tuple<u128, u128> = Struct<ut@Tuple, u128, u128>;
type Tuple<u128, core::bool> = Struct<ut@Tuple, u128, core::bool>;

libfunc u128_const<0> = u128_const<0>;
libfunc struct_construct<core::integer::u256> = struct_construct<core::integer::u256>;
libfunc struct_deconstruct<loot_survivor::adventurer::Adventurer> = struct_deconstruct<loot_survivor::adventurer::Adventurer>;
libfunc u16_to_felt252 = u16_to_felt252;
libfunc u128_const<5708990770823839524233143877797980545530986496> = u128_const<5708990770823839524233143877797980545530986496>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc store_temp<core::integer::u256> = store_temp<core::integer::u256>;
libfunc function_call<user@pack::pack::pack_value> = function_call<user@pack::pack::pack_value>;
libfunc enum_match<core::PanicResult::<(core::integer::u256,)>> = enum_match<core::PanicResult::<(core::integer::u256,)>>;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<Tuple<core::integer::u256>> = struct_deconstruct<Tuple<core::integer::u256>>;
libfunc struct_deconstruct<core::integer::u256> = struct_deconstruct<core::integer::u256>;
libfunc bitwise = bitwise;
libfunc drop<u128> = drop<u128>;
libfunc u128_const<21267647932558653966460912964485513216> = u128_const<21267647932558653966460912964485513216>;
libfunc store_temp<Bitwise> = store_temp<Bitwise>;
libfunc function_call<user@core::integer::U256TryIntoFelt252::try_into> = function_call<user@core::integer::U256TryIntoFelt252::try_into>;
libfunc enum_match<core::option::Option::<core::felt252>> = enum_match<core::option::Option::<core::felt252>>;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::PanicResult::<(core::felt252,)>, 0> = enum_init<core::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::felt252,)>> = store_temp<core::PanicResult::<(core::felt252,)>>;
libfunc drop<Unit> = drop<Unit>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<29721761890975875353235833581453094220424382983267374> = felt252_const<29721761890975875353235833581453094220424382983267374>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc enum_init<core::PanicResult::<(core::felt252,)>, 1> = enum_init<core::PanicResult::<(core::felt252,)>, 1>;
libfunc drop<core::integer::u256> = drop<core::integer::u256>;
libfunc drop<u16> = drop<u16>;
libfunc function_call<user@core::integer::u256_from_felt252> = function_call<user@core::integer::u256_from_felt252>;
libfunc u128_const<65535> = u128_const<65535>;
libfunc dup<core::integer::u256> = dup<core::integer::u256>;
libfunc function_call<user@pack::pack::unpack_value> = function_call<user@pack::pack::unpack_value>;
libfunc function_call<user@pack::pack::U256TryIntoU16::try_into> = function_call<user@pack::pack::U256TryIntoU16::try_into>;
libfunc enum_match<core::option::Option::<core::integer::u16>> = enum_match<core::option::Option::<core::integer::u16>>;
libfunc struct_construct<loot_survivor::adventurer::Adventurer> = struct_construct<loot_survivor::adventurer::Adventurer>;
libfunc struct_construct<Tuple<loot_survivor::adventurer::Adventurer>> = struct_construct<Tuple<loot_survivor::adventurer::Adventurer>>;
libfunc enum_init<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, 0> = enum_init<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, 0>;
libfunc store_temp<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>> = store_temp<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>>;
libfunc enum_init<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, 1> = enum_init<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, 1>;
libfunc u16_const<100> = u16_const<100>;
libfunc store_temp<loot_survivor::adventurer::Adventurer> = store_temp<loot_survivor::adventurer::Adventurer>;
libfunc function_call<user@loot_survivor::adventurer::pack_adventurer> = function_call<user@loot_survivor::adventurer::pack_adventurer>;
libfunc enum_match<core::PanicResult::<(core::felt252,)>> = enum_match<core::PanicResult::<(core::felt252,)>>;
libfunc drop<Tuple<felt252>> = drop<Tuple<felt252>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::PanicResult::<((),)>, 0> = enum_init<core::PanicResult::<((),)>, 0>;
libfunc store_temp<core::PanicResult::<((),)>> = store_temp<core::PanicResult::<((),)>>;
libfunc enum_init<core::PanicResult::<((),)>, 1> = enum_init<core::PanicResult::<((),)>, 1>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<core::integer::u256> = rename<core::integer::u256>;
libfunc function_call<user@core::integer::U256Mul::mul> = function_call<user@core::integer::U256Mul::mul>;
libfunc struct_construct<Tuple<core::integer::u256>> = struct_construct<Tuple<core::integer::u256>>;
libfunc enum_init<core::PanicResult::<(core::integer::u256,)>, 0> = enum_init<core::PanicResult::<(core::integer::u256,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::integer::u256,)>> = store_temp<core::PanicResult::<(core::integer::u256,)>>;
libfunc enum_init<core::PanicResult::<(core::integer::u256,)>, 1> = enum_init<core::PanicResult::<(core::integer::u256,)>, 1>;
libfunc u128_const<10633823966279327296825105735305134080> = u128_const<10633823966279327296825105735305134080>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc dup<u128> = dup<u128>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc u128_eq = u128_eq;
libfunc jump = jump;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc u128_to_felt252 = u128_to_felt252;
libfunc felt252_const<340282366920938463463374607431768211456> = felt252_const<340282366920938463463374607431768211456>;
libfunc felt252_mul = felt252_mul;
libfunc felt252_add = felt252_add;
libfunc enum_init<core::option::Option::<core::felt252>, 0> = enum_init<core::option::Option::<core::felt252>, 0>;
libfunc store_temp<core::option::Option::<core::felt252>> = store_temp<core::option::Option::<core::felt252>>;
libfunc enum_init<core::option::Option::<core::felt252>, 1> = enum_init<core::option::Option::<core::felt252>, 1>;
libfunc u128s_from_felt252 = u128s_from_felt252;
libfunc function_call<user@core::integer::U256Div::div> = function_call<user@core::integer::U256Div::div>;
libfunc function_call<user@core::integer::Felt252TryIntoU16::try_into> = function_call<user@core::integer::Felt252TryIntoU16::try_into>;
libfunc rename<core::option::Option::<core::integer::u16>> = rename<core::option::Option::<core::integer::u16>>;
libfunc enum_init<core::option::Option::<core::integer::u16>, 1> = enum_init<core::option::Option::<core::integer::u16>, 1>;
libfunc store_temp<core::option::Option::<core::integer::u16>> = store_temp<core::option::Option::<core::integer::u16>>;
libfunc function_call<user@core::integer::u256_checked_mul> = function_call<user@core::integer::u256_checked_mul>;
libfunc enum_match<core::option::Option::<core::integer::u256>> = enum_match<core::option::Option::<core::integer::u256>>;
libfunc felt252_const<39879774624083218221772669863277689073527> = felt252_const<39879774624083218221772669863277689073527>;
libfunc function_call<user@core::integer::u256_as_non_zero> = function_call<user@core::integer::u256_as_non_zero>;
libfunc enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>> = enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>;
libfunc struct_deconstruct<Tuple<NonZero<core::integer::u256>>> = struct_deconstruct<Tuple<NonZero<core::integer::u256>>>;
libfunc u256_safe_divmod = u256_safe_divmod;
libfunc u16_try_from_felt252 = u16_try_from_felt252;
libfunc enum_init<core::option::Option::<core::integer::u16>, 0> = enum_init<core::option::Option::<core::integer::u16>, 0>;
libfunc function_call<user@core::integer::u256_overflow_mul> = function_call<user@core::integer::u256_overflow_mul>;
libfunc struct_deconstruct<Tuple<core::integer::u256, core::bool>> = struct_deconstruct<Tuple<core::integer::u256, core::bool>>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 0> = enum_init<core::option::Option::<core::integer::u256>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u256>> = store_temp<core::option::Option::<core::integer::u256>>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 1> = enum_init<core::option::Option::<core::integer::u256>, 1>;
libfunc function_call<user@core::integer::u256_try_as_non_zero> = function_call<user@core::integer::u256_try_as_non_zero>;
libfunc enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
libfunc struct_construct<Tuple<NonZero<core::integer::u256>>> = struct_construct<Tuple<NonZero<core::integer::u256>>>;
libfunc enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 0> = enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>> = store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>;
libfunc felt252_const<2161886914012515606576> = felt252_const<2161886914012515606576>;
libfunc enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 1> = enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 1>;
libfunc u128_guarantee_mul = u128_guarantee_mul;
libfunc store_temp<U128MulGuarantee> = store_temp<U128MulGuarantee>;
libfunc function_call<user@core::integer::U128MulGuaranteeDestruct::destruct> = function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>;
libfunc struct_construct<Tuple<u128, u128>> = struct_construct<Tuple<u128, u128>>;
libfunc struct_deconstruct<Tuple<u128, u128>> = struct_deconstruct<Tuple<u128, u128>>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc bool_or_impl = bool_or_impl;
libfunc bool_and_impl = bool_and_impl;
libfunc struct_construct<Tuple<u128, core::bool>> = struct_construct<Tuple<u128, core::bool>>;
libfunc store_temp<Tuple<u128, core::bool>> = store_temp<Tuple<u128, core::bool>>;
libfunc struct_deconstruct<Tuple<u128, core::bool>> = struct_deconstruct<Tuple<u128, core::bool>>;
libfunc drop<core::bool> = drop<core::bool>;
libfunc struct_construct<Tuple<core::integer::u256, core::bool>> = struct_construct<Tuple<core::integer::u256, core::bool>>;
libfunc store_temp<Tuple<core::integer::u256, core::bool>> = store_temp<Tuple<core::integer::u256, core::bool>>;
libfunc u256_is_zero = u256_is_zero;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1>;
libfunc store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0>;
libfunc rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
libfunc u128_mul_guarantee_verify = u128_mul_guarantee_verify;
libfunc store_temp<Unit> = store_temp<Unit>;

u128_const<0>() -> ([3]);
u128_const<0>() -> ([4]);
struct_construct<core::integer::u256>([3], [4]) -> ([5]);
struct_deconstruct<loot_survivor::adventurer::Adventurer>([2]) -> ([6], [7]);
u16_to_felt252([6]) -> ([8]);
u128_const<0>() -> ([9]);
u128_const<5708990770823839524233143877797980545530986496>() -> ([10]);
struct_construct<core::integer::u256>([9], [10]) -> ([11]);
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<felt252>([8]) -> ([15]);
store_temp<core::integer::u256>([11]) -> ([16]);
function_call<user@pack::pack::pack_value>([14], [15], [16]) -> ([12], [13]);
store_temp<core::integer::u256>([5]) -> ([5]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([13]) { fallthrough([17]) 77([18]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([17]) -> ([19]);
struct_deconstruct<core::integer::u256>([5]) -> ([20], [21]);
struct_deconstruct<core::integer::u256>([19]) -> ([22], [23]);
bitwise([1], [20], [22]) -> ([24], [25], [26], [27]);
drop<u128>([25]) -> ();
drop<u128>([26]) -> ();
bitwise([24], [21], [23]) -> ([28], [29], [30], [31]);
drop<u128>([29]) -> ();
drop<u128>([30]) -> ();
struct_construct<core::integer::u256>([27], [31]) -> ([32]);
u16_to_felt252([7]) -> ([33]);
u128_const<0>() -> ([34]);
u128_const<21267647932558653966460912964485513216>() -> ([35]);
struct_construct<core::integer::u256>([34], [35]) -> ([36]);
store_temp<RangeCheck>([12]) -> ([39]);
store_temp<felt252>([33]) -> ([40]);
store_temp<core::integer::u256>([36]) -> ([41]);
function_call<user@pack::pack::pack_value>([39], [40], [41]) -> ([37], [38]);
store_temp<Bitwise>([28]) -> ([28]);
store_temp<core::integer::u256>([32]) -> ([32]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([38]) { fallthrough([42]) 70([43]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([42]) -> ([44]);
struct_deconstruct<core::integer::u256>([32]) -> ([45], [46]);
struct_deconstruct<core::integer::u256>([44]) -> ([47], [48]);
bitwise([28], [45], [47]) -> ([49], [50], [51], [52]);
drop<u128>([50]) -> ();
drop<u128>([51]) -> ();
bitwise([49], [46], [48]) -> ([53], [54], [55], [56]);
drop<u128>([54]) -> ();
drop<u128>([55]) -> ();
struct_construct<core::integer::u256>([52], [56]) -> ([57]);
store_temp<RangeCheck>([37]) -> ([60]);
store_temp<core::integer::u256>([57]) -> ([61]);
function_call<user@core::integer::U256TryIntoFelt252::try_into>([60], [61]) -> ([58], [59]);
store_temp<Bitwise>([53]) -> ([53]);
enum_match<core::option::Option::<core::felt252>>([59]) { fallthrough([62]) 59([63]) };
branch_align() -> ();
struct_construct<Tuple<felt252>>([62]) -> ([64]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([64]) -> ([65]);
store_temp<RangeCheck>([58]) -> ([66]);
store_temp<Bitwise>([53]) -> ([67]);
store_temp<core::PanicResult::<(core::felt252,)>>([65]) -> ([68]);
return([66], [67], [68]);
branch_align() -> ();
drop<Unit>([63]) -> ();
array_new<felt252>() -> ([69]);
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([70]);
store_temp<felt252>([70]) -> ([70]);
array_append<felt252>([69], [70]) -> ([71]);
enum_init<core::PanicResult::<(core::felt252,)>, 1>([71]) -> ([72]);
store_temp<RangeCheck>([58]) -> ([73]);
store_temp<Bitwise>([53]) -> ([74]);
store_temp<core::PanicResult::<(core::felt252,)>>([72]) -> ([75]);
return([73], [74], [75]);
branch_align() -> ();
drop<core::integer::u256>([32]) -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([43]) -> ([76]);
store_temp<RangeCheck>([37]) -> ([77]);
store_temp<Bitwise>([28]) -> ([78]);
store_temp<core::PanicResult::<(core::felt252,)>>([76]) -> ([79]);
return([77], [78], [79]);
branch_align() -> ();
drop<u16>([7]) -> ();
drop<core::integer::u256>([5]) -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([18]) -> ([80]);
store_temp<RangeCheck>([12]) -> ([81]);
store_temp<Bitwise>([1]) -> ([82]);
store_temp<core::PanicResult::<(core::felt252,)>>([80]) -> ([83]);
return([81], [82], [83]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<felt252>([2]) -> ([6]);
function_call<user@core::integer::u256_from_felt252>([5], [6]) -> ([3], [4]);
u128_const<0>() -> ([7]);
u128_const<5708990770823839524233143877797980545530986496>() -> ([8]);
struct_construct<core::integer::u256>([7], [8]) -> ([9]);
u128_const<65535>() -> ([10]);
u128_const<0>() -> ([11]);
struct_construct<core::integer::u256>([10], [11]) -> ([12]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<Bitwise>([1]) -> ([17]);
dup<core::integer::u256>([4]) -> ([4], [18]);
store_temp<core::integer::u256>([18]) -> ([18]);
store_temp<core::integer::u256>([9]) -> ([19]);
store_temp<core::integer::u256>([12]) -> ([20]);
function_call<user@pack::pack::unpack_value>([16], [17], [18], [19], [20]) -> ([13], [14], [15]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([15]) { fallthrough([21]) 167([22]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([21]) -> ([23]);
store_temp<RangeCheck>([13]) -> ([26]);
store_temp<core::integer::u256>([23]) -> ([27]);
function_call<user@pack::pack::U256TryIntoU16::try_into>([26], [27]) -> ([24], [25]);
enum_match<core::option::Option::<core::integer::u16>>([25]) { fallthrough([28]) 155([29]) };
branch_align() -> ();
u128_const<0>() -> ([30]);
u128_const<21267647932558653966460912964485513216>() -> ([31]);
struct_construct<core::integer::u256>([30], [31]) -> ([32]);
u128_const<65535>() -> ([33]);
u128_const<0>() -> ([34]);
struct_construct<core::integer::u256>([33], [34]) -> ([35]);
store_temp<RangeCheck>([24]) -> ([39]);
store_temp<Bitwise>([14]) -> ([40]);
store_temp<core::integer::u256>([4]) -> ([41]);
store_temp<core::integer::u256>([32]) -> ([42]);
store_temp<core::integer::u256>([35]) -> ([43]);
function_call<user@pack::pack::unpack_value>([39], [40], [41], [42], [43]) -> ([36], [37], [38]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([38]) { fallthrough([44]) 148([45]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([44]) -> ([46]);
store_temp<RangeCheck>([36]) -> ([49]);
store_temp<core::integer::u256>([46]) -> ([50]);
function_call<user@pack::pack::U256TryIntoU16::try_into>([49], [50]) -> ([47], [48]);
enum_match<core::option::Option::<core::integer::u16>>([48]) { fallthrough([51]) 136([52]) };
branch_align() -> ();
struct_construct<loot_survivor::adventurer::Adventurer>([28], [51]) -> ([53]);
struct_construct<Tuple<loot_survivor::adventurer::Adventurer>>([53]) -> ([54]);
enum_init<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, 0>([54]) -> ([55]);
store_temp<RangeCheck>([47]) -> ([56]);
store_temp<Bitwise>([37]) -> ([57]);
store_temp<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>>([55]) -> ([58]);
return([56], [57], [58]);
branch_align() -> ();
drop<Unit>([52]) -> ();
drop<u16>([28]) -> ();
array_new<felt252>() -> ([59]);
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([60]);
store_temp<felt252>([60]) -> ([60]);
array_append<felt252>([59], [60]) -> ([61]);
enum_init<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, 1>([61]) -> ([62]);
store_temp<RangeCheck>([47]) -> ([63]);
store_temp<Bitwise>([37]) -> ([64]);
store_temp<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>>([62]) -> ([65]);
return([63], [64], [65]);
branch_align() -> ();
drop<u16>([28]) -> ();
enum_init<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, 1>([45]) -> ([66]);
store_temp<RangeCheck>([36]) -> ([67]);
store_temp<Bitwise>([37]) -> ([68]);
store_temp<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>>([66]) -> ([69]);
return([67], [68], [69]);
branch_align() -> ();
drop<Unit>([29]) -> ();
drop<core::integer::u256>([4]) -> ();
array_new<felt252>() -> ([70]);
felt252_const<29721761890975875353235833581453094220424382983267374>() -> ([71]);
store_temp<felt252>([71]) -> ([71]);
array_append<felt252>([70], [71]) -> ([72]);
enum_init<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, 1>([72]) -> ([73]);
store_temp<RangeCheck>([24]) -> ([74]);
store_temp<Bitwise>([14]) -> ([75]);
store_temp<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>>([73]) -> ([76]);
return([74], [75], [76]);
branch_align() -> ();
drop<core::integer::u256>([4]) -> ();
enum_init<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>, 1>([22]) -> ([77]);
store_temp<RangeCheck>([13]) -> ([78]);
store_temp<Bitwise>([14]) -> ([79]);
store_temp<core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>>([77]) -> ([80]);
return([78], [79], [80]);
u16_const<100>() -> ([2]);
u16_const<100>() -> ([3]);
struct_construct<loot_survivor::adventurer::Adventurer>([2], [3]) -> ([4]);
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<Bitwise>([1]) -> ([9]);
store_temp<loot_survivor::adventurer::Adventurer>([4]) -> ([10]);
function_call<user@loot_survivor::adventurer::pack_adventurer>([8], [9], [10]) -> ([5], [6], [7]);
enum_match<core::PanicResult::<(core::felt252,)>>([7]) { fallthrough([11]) 191([12]) };
branch_align() -> ();
drop<Tuple<felt252>>([11]) -> ();
struct_construct<Unit>() -> ([13]);
struct_construct<Tuple<Unit>>([13]) -> ([14]);
enum_init<core::PanicResult::<((),)>, 0>([14]) -> ([15]);
store_temp<RangeCheck>([5]) -> ([16]);
store_temp<Bitwise>([6]) -> ([17]);
store_temp<core::PanicResult::<((),)>>([15]) -> ([18]);
return([16], [17], [18]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([12]) -> ([19]);
store_temp<RangeCheck>([5]) -> ([20]);
store_temp<Bitwise>([6]) -> ([21]);
store_temp<core::PanicResult::<((),)>>([19]) -> ([22]);
return([20], [21], [22]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<felt252>([1]) -> ([6]);
function_call<user@core::integer::u256_from_felt252>([5], [6]) -> ([3], [4]);
rename<RangeCheck>([3]) -> ([9]);
rename<core::integer::u256>([4]) -> ([10]);
store_temp<core::integer::u256>([2]) -> ([11]);
function_call<user@core::integer::U256Mul::mul>([9], [10], [11]) -> ([7], [8]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([8]) { fallthrough([12]) 212([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([12]) -> ([14]);
struct_construct<Tuple<core::integer::u256>>([14]) -> ([15]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([15]) -> ([16]);
store_temp<RangeCheck>([7]) -> ([17]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([16]) -> ([18]);
return([17], [18]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([13]) -> ([19]);
store_temp<RangeCheck>([7]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([19]) -> ([21]);
return([20], [21]);
struct_deconstruct<core::integer::u256>([1]) -> ([2], [3]);
u128_const<10633823966279327296825105735305134080>() -> ([4]);
store_temp<u128>([4]) -> ([4]);
dup<u128>([4]) -> ([4], [5]);
dup<u128>([3]) -> ([3], [6]);
u128_overflowing_sub([0], [5], [6]) { fallthrough([7], [8]) 267([9], [10]) };
branch_align() -> ();
drop<u128>([8]) -> ();
dup<u128>([3]) -> ([3], [11]);
store_temp<RangeCheck>([7]) -> ([7]);
u128_eq([11], [4]) { fallthrough() 230() };
branch_align() -> ();
jump() { 248() };
branch_align() -> ();
u128_const<0>() -> ([12]);
dup<u128>([2]) -> ([2], [13]);
u128_eq([13], [12]) { fallthrough() 239() };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 0>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([16]);
jump() { 243() };
branch_align() -> ();
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 1>([17]) -> ([18]);
store_temp<core::bool>([18]) -> ([16]);
bool_not_impl([16]) -> ([19]);
store_temp<core::bool>([19]) -> ([19]);
enum_match<core::bool>([19]) { fallthrough([20]) 258([21]) };
branch_align() -> ();
drop<Unit>([20]) -> ();
u128_to_felt252([3]) -> ([22]);
felt252_const<340282366920938463463374607431768211456>() -> ([23]);
felt252_mul([22], [23]) -> ([24]);
u128_to_felt252([2]) -> ([25]);
store_temp<felt252>([24]) -> ([24]);
felt252_add([24], [25]) -> ([26]);
enum_init<core::option::Option::<core::felt252>, 0>([26]) -> ([27]);
store_temp<RangeCheck>([7]) -> ([28]);
store_temp<core::option::Option::<core::felt252>>([27]) -> ([29]);
return([28], [29]);
branch_align() -> ();
drop<Unit>([21]) -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::option::Option::<core::felt252>, 1>([30]) -> ([31]);
store_temp<RangeCheck>([7]) -> ([32]);
store_temp<core::option::Option::<core::felt252>>([31]) -> ([33]);
return([32], [33]);
branch_align() -> ();
drop<u128>([10]) -> ();
drop<u128>([4]) -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
struct_construct<Unit>() -> ([34]);
enum_init<core::option::Option::<core::felt252>, 1>([34]) -> ([35]);
store_temp<RangeCheck>([9]) -> ([36]);
store_temp<core::option::Option::<core::felt252>>([35]) -> ([37]);
return([36], [37]);
u128s_from_felt252([0], [1]) { fallthrough([2], [3]) 284([4], [5], [6]) };
branch_align() -> ();
u128_const<0>() -> ([7]);
struct_construct<core::integer::u256>([3], [7]) -> ([8]);
store_temp<RangeCheck>([2]) -> ([9]);
store_temp<core::integer::u256>([8]) -> ([10]);
jump() { 288() };
branch_align() -> ();
struct_construct<core::integer::u256>([6], [5]) -> ([11]);
store_temp<RangeCheck>([4]) -> ([9]);
store_temp<core::integer::u256>([11]) -> ([10]);
rename<RangeCheck>([9]) -> ([12]);
rename<core::integer::u256>([10]) -> ([13]);
return([12], [13]);
store_temp<RangeCheck>([0]) -> ([7]);
store_temp<core::integer::u256>([2]) -> ([8]);
store_temp<core::integer::u256>([3]) -> ([9]);
function_call<user@core::integer::U256Div::div>([7], [8], [9]) -> ([5], [6]);
enum_match<core::PanicResult::<(core::integer::u256,)>>([6]) { fallthrough([10]) 313([11]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([10]) -> ([12]);
struct_deconstruct<core::integer::u256>([12]) -> ([13], [14]);
struct_deconstruct<core::integer::u256>([4]) -> ([15], [16]);
bitwise([1], [13], [15]) -> ([17], [18], [19], [20]);
drop<u128>([19]) -> ();
drop<u128>([20]) -> ();
bitwise([17], [14], [16]) -> ([21], [22], [23], [24]);
drop<u128>([23]) -> ();
drop<u128>([24]) -> ();
struct_construct<core::integer::u256>([18], [22]) -> ([25]);
struct_construct<Tuple<core::integer::u256>>([25]) -> ([26]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([26]) -> ([27]);
store_temp<RangeCheck>([5]) -> ([28]);
store_temp<Bitwise>([21]) -> ([29]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([27]) -> ([30]);
return([28], [29], [30]);
branch_align() -> ();
drop<core::integer::u256>([4]) -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([11]) -> ([31]);
store_temp<RangeCheck>([5]) -> ([32]);
store_temp<Bitwise>([1]) -> ([33]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([31]) -> ([34]);
return([32], [33], [34]);
store_temp<RangeCheck>([0]) -> ([4]);
store_temp<core::integer::u256>([1]) -> ([5]);
function_call<user@core::integer::U256TryIntoFelt252::try_into>([4], [5]) -> ([2], [3]);
enum_match<core::option::Option::<core::felt252>>([3]) { fallthrough([6]) 331([7]) };
branch_align() -> ();
store_temp<RangeCheck>([2]) -> ([10]);
store_temp<felt252>([6]) -> ([11]);
function_call<user@core::integer::Felt252TryIntoU16::try_into>([10], [11]) -> ([8], [9]);
rename<RangeCheck>([8]) -> ([12]);
rename<core::option::Option::<core::integer::u16>>([9]) -> ([13]);
jump() { 337() };
branch_align() -> ();
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::integer::u16>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([2]) -> ([12]);
store_temp<core::option::Option::<core::integer::u16>>([15]) -> ([13]);
rename<RangeCheck>([12]) -> ([16]);
rename<core::option::Option::<core::integer::u16>>([13]) -> ([17]);
return([16], [17]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_checked_mul>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u256>>([4]) { fallthrough([8]) 351([9]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([8]) -> ([10]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([10]) -> ([11]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([11]) -> ([13]);
return([12], [13]);
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt252>() -> ([14]);
felt252_const<39879774624083218221772669863277689073527>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([16]) -> ([17]);
store_temp<RangeCheck>([3]) -> ([18]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([17]) -> ([19]);
return([18], [19]);
store_temp<core::integer::u256>([2]) -> ([4]);
function_call<user@core::integer::u256_as_non_zero>([4]) -> ([3]);
enum_match<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([3]) { fallthrough([5]) 373([6]) };
branch_align() -> ();
struct_deconstruct<Tuple<NonZero<core::integer::u256>>>([5]) -> ([7]);
u256_safe_divmod([0], [1], [7]) -> ([8], [9], [10]);
drop<core::integer::u256>([10]) -> ();
struct_construct<Tuple<core::integer::u256>>([9]) -> ([11]);
enum_init<core::PanicResult::<(core::integer::u256,)>, 0>([11]) -> ([12]);
store_temp<RangeCheck>([8]) -> ([13]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([12]) -> ([14]);
return([13], [14]);
branch_align() -> ();
drop<core::integer::u256>([1]) -> ();
enum_init<core::PanicResult::<(core::integer::u256,)>, 1>([6]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([16]);
store_temp<core::PanicResult::<(core::integer::u256,)>>([15]) -> ([17]);
return([16], [17]);
u16_try_from_felt252([0], [1]) { fallthrough([2], [3]) 385([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u16>, 0>([3]) -> ([5]);
store_temp<RangeCheck>([2]) -> ([6]);
store_temp<core::option::Option::<core::integer::u16>>([5]) -> ([7]);
jump() { 390() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::integer::u16>, 1>([8]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([6]);
store_temp<core::option::Option::<core::integer::u16>>([9]) -> ([7]);
rename<RangeCheck>([6]) -> ([10]);
rename<core::option::Option::<core::integer::u16>>([7]) -> ([11]);
return([10], [11]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_overflow_mul>([5], [6], [7]) -> ([3], [4]);
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([8], [9]);
enum_match<core::bool>([9]) { fallthrough([10]) 404([11]) };
branch_align() -> ();
drop<Unit>([10]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 0>([8]) -> ([12]);
store_temp<core::option::Option::<core::integer::u256>>([12]) -> ([13]);
jump() { 410() };
branch_align() -> ();
drop<Unit>([11]) -> ();
drop<core::integer::u256>([8]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::integer::u256>, 1>([14]) -> ([15]);
store_temp<core::option::Option::<core::integer::u256>>([15]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::option::Option::<core::integer::u256>>([13]) -> ([17]);
return([16], [17]);
store_temp<core::integer::u256>([0]) -> ([2]);
function_call<user@core::integer::u256_try_as_non_zero>([2]) -> ([1]);
enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([1]) { fallthrough([3]) 421([4]) };
branch_align() -> ();
struct_construct<Tuple<NonZero<core::integer::u256>>>([3]) -> ([5]);
enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 0>([5]) -> ([6]);
store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([6]) -> ([7]);
return([7]);
branch_align() -> ();
drop<Unit>([4]) -> ();
array_new<felt252>() -> ([8]);
felt252_const<2161886914012515606576>() -> ([9]);
store_temp<felt252>([9]) -> ([9]);
array_append<felt252>([8], [9]) -> ([10]);
enum_init<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 1>([10]) -> ([11]);
store_temp<core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([11]) -> ([12]);
return([12]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
dup<u128>([3]) -> ([3], [10]);
dup<u128>([5]) -> ([5], [11]);
u128_guarantee_mul([10], [11]) -> ([7], [8], [9]);
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<U128MulGuarantee>([9]) -> ([15]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([14], [15]) -> ([12], [13]);
drop<Unit>([13]) -> ();
struct_construct<Tuple<u128, u128>>([7], [8]) -> ([16]);
struct_deconstruct<Tuple<u128, u128>>([16]) -> ([17], [18]);
dup<u128>([6]) -> ([6], [22]);
u128_guarantee_mul([3], [22]) -> ([19], [20], [21]);
store_temp<RangeCheck>([12]) -> ([25]);
store_temp<U128MulGuarantee>([21]) -> ([26]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([25], [26]) -> ([23], [24]);
drop<Unit>([24]) -> ();
struct_construct<Tuple<u128, u128>>([19], [20]) -> ([27]);
struct_deconstruct<Tuple<u128, u128>>([27]) -> ([28], [29]);
dup<u128>([4]) -> ([4], [33]);
u128_guarantee_mul([33], [5]) -> ([30], [31], [32]);
store_temp<RangeCheck>([23]) -> ([36]);
store_temp<U128MulGuarantee>([32]) -> ([37]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([36], [37]) -> ([34], [35]);
drop<Unit>([35]) -> ();
struct_construct<Tuple<u128, u128>>([30], [31]) -> ([38]);
struct_deconstruct<Tuple<u128, u128>>([38]) -> ([39], [40]);
store_temp<u128>([17]) -> ([17]);
store_temp<u128>([29]) -> ([29]);
store_temp<u128>([40]) -> ([40]);
store_temp<u128>([18]) -> ([18]);
store_temp<u128>([28]) -> ([28]);
store_temp<u128>([39]) -> ([39]);
u128_overflowing_add([34], [17], [29]) { fallthrough([41], [42]) 533([43], [44]) };
branch_align() -> ();
u128_const<0>() -> ([45]);
store_temp<RangeCheck>([41]) -> ([41]);
u128_eq([28], [45]) { fallthrough() 473() };
branch_align() -> ();
struct_construct<Unit>() -> ([46]);
enum_init<core::bool, 0>([46]) -> ([47]);
store_temp<core::bool>([47]) -> ([48]);
jump() { 477() };
branch_align() -> ();
struct_construct<Unit>() -> ([49]);
enum_init<core::bool, 1>([49]) -> ([50]);
store_temp<core::bool>([50]) -> ([48]);
bool_not_impl([48]) -> ([51]);
u128_const<0>() -> ([52]);
store_temp<core::bool>([51]) -> ([51]);
u128_eq([39], [52]) { fallthrough() 486() };
branch_align() -> ();
struct_construct<Unit>() -> ([53]);
enum_init<core::bool, 0>([53]) -> ([54]);
store_temp<core::bool>([54]) -> ([55]);
jump() { 490() };
branch_align() -> ();
struct_construct<Unit>() -> ([56]);
enum_init<core::bool, 1>([56]) -> ([57]);
store_temp<core::bool>([57]) -> ([55]);
bool_not_impl([55]) -> ([58]);
store_temp<core::bool>([58]) -> ([58]);
bool_or_impl([51], [58]) -> ([59]);
u128_const<0>() -> ([60]);
store_temp<u128>([60]) -> ([60]);
store_temp<core::bool>([59]) -> ([59]);
u128_overflowing_sub([41], [60], [4]) { fallthrough([61], [62]) 504([63], [64]) };
branch_align() -> ();
drop<u128>([62]) -> ();
struct_construct<Unit>() -> ([65]);
enum_init<core::bool, 0>([65]) -> ([66]);
store_temp<RangeCheck>([61]) -> ([67]);
store_temp<core::bool>([66]) -> ([68]);
jump() { 510() };
branch_align() -> ();
drop<u128>([64]) -> ();
struct_construct<Unit>() -> ([69]);
enum_init<core::bool, 1>([69]) -> ([70]);
store_temp<RangeCheck>([63]) -> ([67]);
store_temp<core::bool>([70]) -> ([68]);
u128_const<0>() -> ([71]);
store_temp<u128>([71]) -> ([71]);
u128_overflowing_sub([67], [71], [6]) { fallthrough([72], [73]) 520([74], [75]) };
branch_align() -> ();
drop<u128>([73]) -> ();
struct_construct<Unit>() -> ([76]);
enum_init<core::bool, 0>([76]) -> ([77]);
store_temp<RangeCheck>([72]) -> ([78]);
store_temp<core::bool>([77]) -> ([79]);
jump() { 526() };
branch_align() -> ();
drop<u128>([75]) -> ();
struct_construct<Unit>() -> ([80]);
enum_init<core::bool, 1>([80]) -> ([81]);
store_temp<RangeCheck>([74]) -> ([78]);
store_temp<core::bool>([81]) -> ([79]);
bool_and_impl([68], [79]) -> ([82]);
store_temp<core::bool>([82]) -> ([82]);
bool_or_impl([59], [82]) -> ([83]);
struct_construct<Tuple<u128, core::bool>>([42], [83]) -> ([84]);
store_temp<RangeCheck>([78]) -> ([85]);
store_temp<Tuple<u128, core::bool>>([84]) -> ([86]);
jump() { 543() };
branch_align() -> ();
drop<u128>([6]) -> ();
drop<u128>([39]) -> ();
drop<u128>([28]) -> ();
drop<u128>([4]) -> ();
struct_construct<Unit>() -> ([87]);
enum_init<core::bool, 1>([87]) -> ([88]);
struct_construct<Tuple<u128, core::bool>>([44], [88]) -> ([89]);
store_temp<RangeCheck>([43]) -> ([85]);
store_temp<Tuple<u128, core::bool>>([89]) -> ([86]);
struct_deconstruct<Tuple<u128, core::bool>>([86]) -> ([90], [91]);
u128_overflowing_add([85], [90], [40]) { fallthrough([92], [93]) 550([94], [95]) };
branch_align() -> ();
struct_construct<Tuple<u128, core::bool>>([93], [91]) -> ([96]);
store_temp<RangeCheck>([92]) -> ([97]);
store_temp<Tuple<u128, core::bool>>([96]) -> ([98]);
jump() { 557() };
branch_align() -> ();
drop<core::bool>([91]) -> ();
struct_construct<Unit>() -> ([99]);
enum_init<core::bool, 1>([99]) -> ([100]);
struct_construct<Tuple<u128, core::bool>>([95], [100]) -> ([101]);
store_temp<RangeCheck>([94]) -> ([97]);
store_temp<Tuple<u128, core::bool>>([101]) -> ([98]);
struct_deconstruct<Tuple<u128, core::bool>>([98]) -> ([102], [103]);
struct_construct<core::integer::u256>([18], [102]) -> ([104]);
struct_construct<Tuple<core::integer::u256, core::bool>>([104], [103]) -> ([105]);
store_temp<RangeCheck>([97]) -> ([106]);
store_temp<Tuple<core::integer::u256, core::bool>>([105]) -> ([107]);
return([106], [107]);
u256_is_zero([0]) { fallthrough() 569([1]) };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1>([2]) -> ([3]);
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([3]) -> ([4]);
jump() { 572() };
branch_align() -> ();
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0>([1]) -> ([5]);
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([5]) -> ([4]);
rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([4]) -> ([6]);
return([6]);
u128_mul_guarantee_verify([0], [1]) -> ([2]);
struct_construct<Unit>() -> ([3]);
store_temp<RangeCheck>([2]) -> ([4]);
store_temp<Unit>([3]) -> ([5]);
return([4], [5]);

loot_survivor::adventurer::pack_adventurer@0([0]: RangeCheck, [1]: Bitwise, [2]: loot_survivor::adventurer::Adventurer) -> (RangeCheck, Bitwise, core::PanicResult::<(core::felt252,)>);
loot_survivor::adventurer::unpack_adventurer@85([0]: RangeCheck, [1]: Bitwise, [2]: felt252) -> (RangeCheck, Bitwise, core::PanicResult::<(loot_survivor::adventurer::Adventurer,)>);
loot_survivor::adventurer::test_adventurer@174([0]: RangeCheck, [1]: Bitwise) -> (RangeCheck, Bitwise, core::PanicResult::<((),)>);
pack::pack::pack_value@197([0]: RangeCheck, [1]: felt252, [2]: core::integer::u256) -> (RangeCheck, core::PanicResult::<(core::integer::u256,)>);
core::integer::U256TryIntoFelt252::try_into@217([0]: RangeCheck, [1]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::felt252>);
core::integer::u256_from_felt252@277([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::integer::u256);
pack::pack::unpack_value@291([0]: RangeCheck, [1]: Bitwise, [2]: core::integer::u256, [3]: core::integer::u256, [4]: core::integer::u256) -> (RangeCheck, Bitwise, core::PanicResult::<(core::integer::u256,)>);
pack::pack::U256TryIntoU16::try_into@320([0]: RangeCheck, [1]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::integer::u16>);
core::integer::U256Mul::mul@340([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::PanicResult::<(core::integer::u256,)>);
core::integer::U256Div::div@361([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::PanicResult::<(core::integer::u256,)>);
core::integer::Felt252TryIntoU16::try_into@379([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u16>);
core::integer::u256_checked_mul@393([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::integer::u256>);
core::integer::u256_as_non_zero@413([0]: core::integer::u256) -> (core::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>);
core::integer::u256_overflow_mul@430([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);
core::integer::u256_try_as_non_zero@563([0]: core::integer::u256) -> (core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>);
core::integer::U128MulGuaranteeDestruct::destruct@574([0]: RangeCheck, [1]: U128MulGuarantee) -> (RangeCheck, Unit);
